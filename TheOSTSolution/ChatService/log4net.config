<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!--如果不用App.config作配置文件，则configSections节不是必须的。-->
  <configSections>
    <!--“type”属性的完整格式为：配置节处理器类名,程序集名称,Version=程序集版本号,Culture=区域信息,PublicKeyToken=公钥-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>
  <log4net>
    <root>
      <!--level: OFF>FATAL>ERROR>WARN>INFO>DEBUG>ALL 缺省值为DEBUG-->
      <appender-ref ref="RollingFileAppender" />
      <appender-ref ref="AdoNetAppender" />
    </root>
    <logger name="FileLogger">
      <level value="DEBUG" />
      <appender-ref ref="RollingFileAppender" />
    </logger>
    <logger name="AdoNetLogger">
      <level value="INFO" />
      <appender-ref ref="AdoNetAppender" />
    </logger>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="logs/log-" />
      <!--是否续写-->
      <appendToFile value="true" />
      <!-- RollingStyle Composite 综合  Size 按大小  Date 按时间 -->
      <rollingStyle value="Composite" />
      <maxSizeRollBackups value="-1" />
      <maximumFileSize value="2MB" />
      <datePattern value="yyyy/yyyyMM/yyyyMMdd/yyyyMMdd-HH'.log'" />
      <staticLogFileName value="false"/>
      <encoding value="utf-8"/>
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%d [%t] %-5p %logger [%p{NDC}] - %m%n" />-->
        <!--<param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger 操作者ID：%property{Operator} 操作类型：%property{Action}%n 当前机器名:%property%n当前机器名及登录用户：%username %n 记录位置：%location%n 消息描述：%property{Message}%n 异常：%exception%n 消息：%message%newline%n%n" />-->
        <param name="ConversionPattern" value="%date [%thread] %-5level %message%n" />
      </layout>
    </appender>
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <!--
CREATE TABLE [dbo].[Log](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Date] [datetime] NOT NULL,
	[Thread] [varchar](255) NOT NULL,
	[Level] [varchar](50) NOT NULL,
	[Logger] [varchar](255) NOT NULL,
	[Message] [varchar](4000) NOT NULL,
	[Exception] [varchar](2000) NULL
) ON [PRIMARY]
GO
      -->
      <bufferSize value="1" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="data source=192.168.16.69;initial catalog=Chat;integrated security=false;persist security info=True;User ID=sa;Password=111111" />
      <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
  </log4net>
  <!--private static log4net.ILog log = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);-->
</configuration>
<!--
%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
%n(new line):换行 
%d(datetime):输出当前语句运行的时刻 
%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
%t(thread id):当前语句所在的线程ID 
%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
%c(class):当前日志对象的名称
%L：输出语句所在的行号
%F：输出语句所在的文件名
%-数字：表示该项的最小长度，如果不够，则用空格填充
-->